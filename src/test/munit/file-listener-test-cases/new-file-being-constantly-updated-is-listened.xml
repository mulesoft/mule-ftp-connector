<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
      xmlns:java="http://www.mulesoft.org/schema/mule/java"
      xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
        http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">

    <munit:config name="new-file-being-constantly-updated-is-listened.xml"/>
    <munit:dynamic-port propertyName="ftp.server.port"/>

    <munit:before-suite name="new-file-being-constantly-updated-is-listened-startListenerMatcherTestServer">
        <java:invoke-static class="org.mule.extension.ftp.internal.lifecycle.FtpServerLifecycleManager"
                            method="startFtpServer(String)">
            <java:args>
                #[{
                arg0: ${ftp.server.port},
                }]
            </java:args>
        </java:invoke-static>
    </munit:before-suite>

    <munit:after-suite name="new-file-being-constantly-updated-is-listened-clearListenerMatcherTestServer">
        <java:invoke-static class="org.mule.extension.ftp.internal.lifecycle.FtpServerLifecycleManager"
                            method="stopFtpServer()">
            <java:args>
                #[{}]
            </java:args>
        </java:invoke-static>
    </munit:after-suite>

    <munit:before-test name="new-file-being-constantly-updated-is-listened-create-file-for-listener">
        <flow-ref name="write-file"/>
        <flow-ref name="reset-file-listed"/>
    </munit:before-test>

    <munit:test name="newFileBeingConstantlyUpdatedIsListened" description="New file that is constantly being updated is listened">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="listen-filtering-not-updated-recently-newFileBeingConstantlyUpdatedIsListened"/>
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="numberOfModifications" value="5"/>
        </munit:behavior>
        <munit:execution>
            <foreach collection="#[1 to vars.numberOfModifications]">
                <flow-ref name="wait-2-seconds"/>
                <flow-ref name="modify-file"/>
                <!--Wait for some polling cycles, so that the listener sets the isFileBeingListed key to true and avoid race conditions-->
                <munit-tools:sleep time="600"/>
                <flow-ref name="check-one-file-is-listened"/>
            </foreach>
        </munit:execution>
    </munit:test>

    <flow name="listen-filtering-not-updated-recently-newFileBeingConstantlyUpdatedIsListened">
        <ftp:listener config-ref="config" directory=".">
            <scheduling-strategy>
                <fixed-frequency frequency="200"/>
            </scheduling-strategy>
            <ftp:matcher updatedInTheLast="4" timeUnit="SECONDS"/>
        </ftp:listener>
        <munit-tools:store key="isFileBeingListed">
            <munit-tools:value>#[true]</munit-tools:value>
        </munit-tools:store>
    </flow>

</mule>