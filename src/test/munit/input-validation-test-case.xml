<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
      xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
        http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">

    <munit:config name="input-validation-test-case.xml"/>

    <munit:dynamic-port propertyName="ftp.server.port"/>

    <munit:before-suite name="startFtpTestServer-inputValidationTestCase">
        <java:invoke-static class="org.mule.extension.ftp.internal.lifecycle.FtpServerLifecycleManager"
                            method="startFtpServer(String)">
            <java:args>
                #[{
                arg0: ${ftp.server.port},
                }]
            </java:args>
        </java:invoke-static>
    </munit:before-suite>

    <munit:after-suite name="clearFtpTestServer-inputValidationTestCase">
        <java:invoke-static class="org.mule.extension.ftp.internal.lifecycle.FtpServerLifecycleManager"
                            method="stopFtpServer()">
            <java:args>
                #[{}]
            </java:args>
        </java:invoke-static>
    </munit:after-suite>

    <ftp:config name="config-with-dynamic-input">
        <ftp:connection username="anonymous" password="password" host="localhost" port="${ftp.server.port}"
                        workingDir="#[vars.workingDir]">
        </ftp:connection>
    </ftp:config>

    <munit:test name="read-path-with-newline" description="Try to use path with newline char">
        <munit:behavior>
            <set-variable variableName="workinDir" value="/" />
        </munit:behavior>
        <munit:execution>
            <try>
                <ftp:read config-ref="config-with-dynamic-input" path="hello&#10;world.txt" />
                <error-handler>
                    <on-error-continue type="FTP:ILLEGAL_PATH">
                        <set-variable variableName="error" value="#[error.description]"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.error]" is="#[MunitTools::containsString('Path contains newline character:')]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="list-path-with-newline" description="Try to use path with newline char">
        <munit:behavior>
            <set-variable variableName="workinDir" value="/" />
        </munit:behavior>
        <munit:execution>
            <try>
                <ftp:list config-ref="config-with-dynamic-input" directoryPath="/dir&#10;name/" />
                <error-handler>
                    <on-error-continue type="FTP:ILLEGAL_PATH">
                        <set-variable variableName="error" value="#[error.description]"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.error]" is="#[MunitTools::containsString('Path contains newline character:')]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="copy-from-path-with-newline" description="Try to use source path with newline char">
        <munit:behavior>
            <set-variable variableName="workinDir" value="/" />
        </munit:behavior>
        <munit:execution>
            <try>
                <ftp:copy config-ref="config-with-dynamic-input" sourcePath="hello&#10;world.txt" targetPath="copy-test/" />
                <error-handler>
                    <on-error-continue type="FTP:ILLEGAL_PATH">
                        <set-variable variableName="error" value="#[error.description]"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.error]" is="#[MunitTools::containsString('Path contains newline character:')]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="copy-to-path-with-newline" description="Try to use target path with newline char">
        <munit:behavior>
            <set-variable variableName="workinDir" value="/" />
            <ftp:write config-ref="config-with-dynamic-input" path="hello-world.txt">
                <ftp:content>"content"</ftp:content>
            </ftp:write>
        </munit:behavior>
        <munit:execution>
            <try>
                <ftp:copy config-ref="config-with-dynamic-input" sourcePath="hello-world.txt"
                          targetPath="copy-test/folder&#10;output/" />
                <error-handler>
                    <on-error-continue type="FTP:ILLEGAL_PATH">
                        <set-variable variableName="error" value="#[error.description]"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.error]" is="#[MunitTools::containsString('Path contains newline character:')]"/>
        </munit:validation>
    </munit:test>


    <munit:test name="rename-from-file-with-newline" description="Try to use source file with newline char">
        <munit:behavior>
            <set-variable variableName="workinDir" value="/" />
        </munit:behavior>
        <munit:execution>
            <try>
                <ftp:rename config-ref="config-with-dynamic-input" path="hello&#10;world.txt" to="copy-test/" />
                <error-handler>
                    <on-error-continue type="FTP:ILLEGAL_PATH">
                        <set-variable variableName="error" value="#[error.description]"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.error]" is="#[MunitTools::containsString('Path contains newline character:')]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="rename-to-file-with-newline" description="Try to use target file with newline char">
        <munit:behavior>
            <set-variable variableName="workinDir" value="/" />
            <ftp:write config-ref="config-with-dynamic-input" path="hello-world.txt">
                <ftp:content>"content"</ftp:content>
            </ftp:write>
        </munit:behavior>
        <munit:execution>
            <try>
                <ftp:rename config-ref="config-with-dynamic-input" path="hello-world.txt" to="copy&#10;test/" />
                <error-handler>
                    <on-error-continue type="FTP:ILLEGAL_PATH">
                        <set-variable variableName="error" value="#[error.description]"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.error]" is="#[MunitTools::containsString('Path contains newline character:')]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="create-dir-with-newline" description="Try to create dir with newline char">
        <munit:behavior>
            <set-variable variableName="workinDir" value="/" />
        </munit:behavior>
        <munit:execution>
            <try>
                <ftp:create-directory config-ref="config-with-dynamic-input" directoryPath="/dir&#10;name" />
                <error-handler>
                    <on-error-continue type="FTP:ILLEGAL_PATH">
                        <set-variable variableName="error" value="#[error.description]"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.error]" is="#[MunitTools::containsString('Path contains newline character:')]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="working-dir-with-newline" description="Try to create dir with newline char">
        <munit:behavior>
            <set-variable variableName="workingDir" value="#['/dir&#10;name']" />
        </munit:behavior>
        <munit:execution>
            <try>
                <ftp:create-directory config-ref="config-with-dynamic-input" directoryPath="new-dir" />
                <error-handler>
                    <on-error-continue>
                        <set-variable variableName="error" value="#[error.description]"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.error]" is="#[MunitTools::containsString('Path contains newline character:')]"/>
        </munit:validation>
    </munit:test>

</mule>







